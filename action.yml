name: 'Poetry Update'
description: 'Runs `poetry update`, checks for newer dependencies. Creates a pull request if any updates are available.'
branding:
  icon: "chevrons-up"
  color: "purple"
runs:
  using: "composite"
  steps:
    #----------------------------------------------
    #           Install & configure poetry
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    #----------------------------------------------
    #         Check if poetry.lock exists
    #----------------------------------------------
    - name: Check if poetry.lock exists
      run: |
        if [ -f "poetry.lock" ]; then
          echo "poetry.lock file found, running poetry update."
        else
          echo "poetry.lock file not found, skipping poetry update."
          exit 0
        fi

    #----------------------------------------------
    #                Run poetry update
    #----------------------------------------------
    - name: Run poetry update
      run: |
        UPDATE_MESSAGE=$(poetry update | grep -i 'updating' | grep -v 'Updating dependencies' | sed 's/Updating//g')
        echo $UPDATE_MESSAGE

        echo "UPDATE_MESSAGE=$UPDATE_MESSAGE" >> $GITHUB_ENV


    #----------------------------------------------
    #              Create a pull request
    #----------------------------------------------
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: update/poetry-update
        title: Update poetry dependencies
        commit-message: "Chore(deps): Upgrading `poetry` dependencies"
        body: |
          Update `poetry` dependencies to use latest compatible versions.

          **Outdated packages**:
            ${{ env.UPDATE_MESSAGE }}